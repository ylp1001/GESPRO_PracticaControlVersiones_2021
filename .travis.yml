sudo: required
language: android
jdk: oraclejdk8
compiler: gcc

addons:
  sonarqube:
    branches:
      - master
      - develop

env:
  matrix:
    - ANDROID_TARGET=android-26 ANDROID_ABI=armeabi-v7a

android:
  components:
    - tools
    - platform-tools
    - ${ANDROID_TARGET}
    - build-tools-26.0.1
    - extra-android-support
    - extra-android-m2repository
    - extra-google-m2repository
    - extra-google-google_play_services
    - sys-img-${ANDROID_ABI}-${ANDROID_TARGET}

licenses:
    - '.+'

before_install:
#    - sudo apt-get update

install:
#    - sudo apt-get install python-numpy

before_script:
    # Compile OpenCV and set it to path
#    - wget https://github.com/opencv/opencv/archive/3.2.0.zip
#    - unzip 3.2.0.zip >/dev/null
#    - mv opencv-3.2.0 opencv
#    - cd opencv
#    - mkdir build
#    - cd build
#    - cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local -DBUILD_SHARED_LIBS=OFF -DBUILD_EXAMPLES=OFF -DBUILD_TESTS=OFF -DBUILD_PERF_TESTS=OFF -DBUILD_opencv_python=OFF .. >/dev/null
#    - make -j8 >/dev/null
#    - sudo make -j8 install >/dev/null
#    - cd ../..
#    - mkdir opencv_lib
#    - cp opencv/build/lib/libopencv_java320.so opencv_lib/libopencv_java320.so
#    - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PWD/opencv_lib/
    - chmod +x gradlew
    # Create gradle.properties with fake credentials
    - echo "OpenWeatherMapApiKey=\"c75f70c4717eb95847d378bba3bdb275\"" > ~/.gradle/gradle.properties

script:
    # Compile and run unit tests
    - ./gradlew assembleDebug lint
    - ./gradlew clean assembleProdRelease lint --stacktrace
    # Run test coverage report
#    - ./gradlew jacocoTestMockDebugUnitTestReport
    # Run SonarQube analysis
#    - ./gradlew sonarqube
    # Build test app
    # ./gradlew assembleAndroidTest
    # Create and lunch emulator
    #- echo no | android create avd --force -n test -t $ANDROID_TARGET --abi $ANDROID_ABI
    #- emulator -avd test -no-audio -no-window &
    #- android-wait-for-emulator
    #- adb shell setprop dalvik.vm.dexopt-flags v=n,o=v
    #- ./gradlew connectedMockDebugAndroidTest

after_success:
#    - bash <(curl -s https://codecov.io/bash)

cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.sonar/cache'
    - '$HOME/.gradle'
    - '.gradle'
